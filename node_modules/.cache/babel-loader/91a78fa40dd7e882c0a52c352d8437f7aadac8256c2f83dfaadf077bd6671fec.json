{"ast":null,"code":"var _jsxFileName = \"/home/noize/hacking/projects/cherrynoize.github.io/src/components/Blog.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet blogEntries = {};\nblogEntries['main'] = toMap(require.context('./blog/main/entries/', false, /\\.(jsx?)$/));\n\n/* Returns map from context */\nfunction toMap(ctx) {\n  return ctx.keys().map(ctx);\n}\n\n/* Returns blog post */\nfunction Post() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Temporary post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Hi, this is a temporary post.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n/* Returns blog entry */\n_c = Post;\nfunction Entry(props) {\n  _s();\n  const [isVisible, setVisible] = React.useState(true);\n  const domRef = React.useRef();\n  React.useEffect(() => {\n    const observer = new IntersectionObserver(entries => {\n      entries.forEach(entry => setVisible(entry.isIntersecting));\n    });\n    const curDom = domRef.current;\n    observer.observe(curDom);\n    return () => observer.unobserve(curDom);\n  }, []);\n\n  /*\n   * BUGGY PART !!\n   *     V\n   let Post;\n   (async () => {\n   Post = await import(src);\n  })();\n    *\n   *     /\\\n   */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: props.key,\n    className: 'entry fade-in ' + (isVisible ? 'is-visible' : ''),\n    ref: domRef,\n    children: /*#__PURE__*/_jsxDEV(Post, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n/* Returns collection of posts */\n_s(Entry, \"W/9iH9oQBf3mNfp3GiCIMvvkDE8=\");\n_c2 = Entry;\nexport default function Blog(props) {\n  const entries = blogEntries[props.dir];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"blog\",\n    children: entries.map((entry, index) => /*#__PURE__*/_jsxDEV(Entry, {\n      src: entry\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_c3 = Blog;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Post\");\n$RefreshReg$(_c2, \"Entry\");\n$RefreshReg$(_c3, \"Blog\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","blogEntries","toMap","require","context","ctx","keys","map","Post","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Entry","props","_s","isVisible","setVisible","useState","domRef","useRef","useEffect","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","curDom","current","observe","unobserve","id","key","className","ref","_c2","Blog","dir","index","src","_c3","$RefreshReg$"],"sources":["/home/noize/hacking/projects/cherrynoize.github.io/src/components/Blog.jsx"],"sourcesContent":["import React from 'react';\n\nlet blogEntries = {}\nblogEntries['main'] = toMap(require.context('./blog/main/entries/', false, /\\.(jsx?)$/));\n\n/* Returns map from context */\nfunction toMap(ctx) {\n  return ctx.keys().map(ctx);\n}\n\n/* Returns blog post */\nfunction Post() {\n  return (\n    <>\n      <h3>Temporary post</h3>\n      <p>\n        Hi, this is a temporary post.\n      </p>\n    </>\n  )\n}\n\n/* Returns blog entry */\nfunction Entry(props) {\n  const [isVisible, setVisible] = React.useState(true);\n  const domRef = React.useRef();\n\n  React.useEffect(() => {\n    const observer = new IntersectionObserver(entries => {\n      entries.forEach(entry => setVisible(entry.isIntersecting));\n    });\n\n    const curDom = domRef.current;\n    observer.observe(curDom);\n    return () => observer.unobserve(curDom);\n  }, []);\n\n  /*\n   * BUGGY PART !!\n   *     V\n\n  let Post;\n\n  (async () => {\n   Post = await import(src);\n  })();\n\n   *\n   *     /\\\n   */\n\n  return (\n    <div\n      id={props.key}\n      className={'entry fade-in ' + (isVisible ? 'is-visible' : '')}\n      ref={domRef}\n    >\n      <Post />\n    </div>\n  );\n}\n\n/* Returns collection of posts */\nexport default function Blog(props) {\n  const entries = blogEntries[props.dir];\n\n  return(\n    <div id=\"blog\">\n      {\n        entries.map((entry, index) => (\n          <Entry key={index} src={entry} />\n        ))\n      }\n    </div>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}